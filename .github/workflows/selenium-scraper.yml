name: Run Selenium Scraper

on:
  schedule:
    - cron: '20 7 * * *' # Runs daily at 12:50 PM IST (7:20 AM UTC)
  workflow_dispatch: # Allows manual trigger

jobs:
  run-scraper:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7' # Your Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run the Selenium scraper script
      - name: Run scraper
        working-directory: Main1
        run: |
          python main.py

      # Step 5: List directory contents for debugging
      - name: List directory contents
        run: |
          echo "Contents of Main1 directory:"
          ls -la Main1

      # Step 6: Check if output file exists
      - name: Verify testOutput.csv existence
        id: check-file
        run: |
          if [ -f Main1/testOutput.csv ]; then
            echo "File exists"
            echo "file-exists=true" >> $GITHUB_ENV
          else
            echo "File does not exist"
            echo "file-exists=false" >> $GITHUB_ENV
          fi

      # Step 7: Commit output file if it exists
      - name: Commit output file
        if: env.file-exists == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Main1/testOutput.csv
          git commit -m "Update scraper output"
          git push origin HEAD:main # This will use the GITHUB_TOKEN automatically

      # Step 8: Upload CSV output as artifact if it exists
      - name: Upload CSV output as artifact
        if: env.file-exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: testOutput-csv-output
          path: Main1/testOutput.csv
